  # This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

# See the example.cfg file for a description of available parameters.
#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    60,60,20  # an example

[mcu]
##	Obtain mcu value by "ls -l /dev/serial/by-id/" 
#serial = /dev/ttyAMA0
serial = /dev/serial/by-id/usb-Klipper_stm32f103xe_37FFD2054255313739611757-if00
restart_method = command

#[input_shaper]
#shaper_freq_x: 111.8
#shaper_type_x: ei
#shaper_freq_y: 109.8
#shaper_type_y: ei


[temperature_sensor mcu]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 0
max_temp: 120
gcode_id: MCU

[temperature_sensor host]
sensor_type: temperature_host
min_temp: 0
max_temp: 85

[display]
lcd_type: ssd1306
i2c_bus: i2c1a
#i2c_mcu: mcu

[stepper_x]
step_pin: PB13
dir_pin: PB12	# Remove the ! if stepper is moving the opposite direction
enable_pin: !PB14
#step_distance: .01249
microsteps: 16
rotation_distance: 39.97
endstop_pin: PC0 
position_endstop: 120
position_max: 120
homing_speed: 20   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
#microsteps: 16
interpolate: True
run_current: .27
hold_current: .25
sense_resistor: 0.110
stealthchop_threshold: 500

[stepper_y]
step_pin: PB10
dir_pin: PB2	# Remove the ! if stepper is moving the opposite direction
enable_pin: !PB11
#step_distance: .01249
microsteps: 16
rotation_distance: 39.945
endstop_pin: PC1
position_endstop: 118
position_max: 118
homing_speed: 20   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
#microsteps: 16
interpolate: True
run_current: .27
hold_current: .25
sense_resistor: 0.110
stealthchop_threshold: 500

[stepper_z]
step_pin: PB0
dir_pin: PC5	# Remove the ! if stepper is moving the opposite direction
enable_pin: !PB1
#step_distance: .00249 #for T8x8 lead screw
#step_distance: .000625 #for T8x2 lead screw
microsteps: 16
rotation_distance: 8
endstop_pin: PC2
position_endstop: 0
position_max: 120
position_min: 0
homing_speed: 10   #Max 100
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
#microsteps: 16
interpolate: True
run_current: .27
hold_current: 0.25
sense_resistor: 0.110
stealthchop_threshold: 500


[extruder]
step_pin: PB3
dir_pin: PB4	# Remove the ! if stepper is moving the opposite direction
enable_pin: !PD2
#step_distance: .0024 #calibrate this value for your individual printer!!
gear_ratio: 80:20
microsteps: 16
rotation_distance: 22.490 # was 7.68
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_kp = 33.056
pid_ki = 2.296
pid_kd = 119.003
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 780.0
max_extrude_cross_section: .8
#Pressure_advance: 0.3
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
#microsteps: 16
interpolate: True
run_current: 0.22
hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 500

[heater_bed]
heater_pin: PC12
sensor_type: Generic 3950
#sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3
smooth_time: 3.0
max_power: 1.0
control: pid
min_temp: 0
max_temp: 120
pid_kp = 57.728
pid_ki = 3.531
pid_kd = 235.963

[printer]
kinematics: corexy
max_velocity: 250
max_accel: 4000
max_accel_to_decel: 4000
max_z_velocity: 10
max_z_accel: 30
square_corner_velocity: 5.0

[heater_fan hotend_fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
pin: PC7
kick_start_time: 0.5
#depending on your fan, you may need to increase or reduce this value
#if your fan will not start
off_below: 0.13
cycle_time: 0.010

[include nevermore.cfg]


[idle_timeout]
timeout: 1800

[homing_override]
axes: z
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
   G28 X Y
   G0 X30 Y0 F3600 
   
   G28 Z
   G0 Z10 F1800
   G0 X60 Y60 Z20 F3600

# Tool to help adjust bed leveling screws. One may define a
# [bed_screws] config section to enable a BED_SCREWS_ADJUST g-code
# command.
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

[gcode_macro BedScrews]
gcode:
    BED_SCREWS_ADJUST

[gcode_macro PRINT_START]
gcode:
    SET_LED LED=my_leds RED=0.75 GREEN=0.0  BLUE=0.0  TRANSMIT=1
    SET_FAN_SPEED FAN=Nevermore SPEED=0.5
    
   
[gcode_macro PRINT_START1]
gcode:

    SET_LED LED=my_leds RED=0.8 GREEN=0.0  BLUE=1.0  TRANSMIT=1
    G28                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed

    G0 Y0 X10  ; go outside print area

    G1 Z0.2 F500.0
    G92 E0.0

    G1 Z0.2 
    G1 E5.0 F1000.0
    G1 X110 E8.0 F500.0 ; intro line
   
    G92 E0.0
    
    G4 P100
    SET_LED LED=my_leds RED=1.0 GREEN=1.0  BLUE=1.0  TRANSMIT=1
    G4 P100
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    
    SET_LED LED=my_leds RED=0.75 GREEN=0.0  BLUE=0.0  TRANSMIT=1    
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
    G0 Z100 F1500                  ; move bed down 
    
    G4 P5000
    SET_LED LED=my_leds RED=0.0 GREEN=0.75  BLUE=0.0  TRANSMIT=1

    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
     
     
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E325 F1800                  ; quickly load filament to down bowden
   G1 E30 F300                    ; slower extrusion for hotend path
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-380 F1800                 ; retract filament completely
   M82                            ; set extruder to absolute

# Sensor Types
#   "EPCOS 100K B57560G104F"
#   "ATC Semitec 104GT-2"
#   "NTC 100K beta 3950"
#   "Honeywell 100K 135-104LAG-J01"
#   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
#   "AD595"
#   "PT100 INA826"

#[include bedScrewMenu.cfg]

[include mainsail.cfg]

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

#[gcode_macro PAUSE]
#rename_existing: BASE_PAUSE
#default_parameter_X: 60   #edit to your park position
#default_parameter_Y: 60   #edit to your park position
#default_parameter_Z: 10     #edit to your park position
#default_parameter_E: 1      #edit to your retract length
#gcode:
#    SAVE_GCODE_STATE NAME=PAUSE_state
#    BASE_PAUSE
#    G91
#    G1 E-{E} F2100
#    G1 Z{Z}
#    G90
#    G1 X{X} Y{Y} F6000
    
#[gcode_macro RESUME]
#rename_existing: BASE_RESUME
#default_parameter_E: 1      #edit to your retract length
#gcode:
#    G91
#    G1 E{E} F2100
#    G90
#    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
  
[gcode_macro AROUND_THE_BED]
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}

    {% for times in range(5) %}
        G0 X0 Y0 F3600
        G0 X0 Y{max_y} F3600
        G0 X{max_x} Y{max_y} F3600
        G0 X{max_x} Y0 F3600
        G0 X0 Y0 F3600
    {% endfor %}
    G0 x60 y60 F3600

[gcode_macro z_UP_DOWN]
gcode:
    #   Get Boundaries
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    {% for times in range(2) %}
        G0 Z0 F3600
        G0 Z{max_z} F3600
    {% endfor %}
    G0 Z20 F3600
    

    

    
##################
#### NEOPIXEL ####
##################

[neopixel my_leds]
pin: PA8  ##Use this pin for SKR mini V2.0
chain_count: 7
color_order: GRB
initial_RED: .01
initial_GREEN: .01
initial_BLUE: .01


[gcode_macro LEDS_OFF]
gcode: 
  SET_LED LED=my_leds RED=0.0 GREEN=0.0  BLUE=0.0  TRANSMIT=1

[gcode_macro LEDS_INITIAL]
gcode:
  SET_LED LED=my_leds RED=0.01 GREEN=0.01 BLUE=0.01  TRANSMIT=1

[gcode_macro LEDS_WHITE]
gcode:  
  SET_LED LED=my_leds RED=1.0 GREEN=1.0 BLUE=1.0  TRANSMIT=1


[gcode_macro _myleds_vars]
# User settings for the StealthBurner status leds. You can change the status colors and led
# configurations for the logo and nozzle here.
variable_colors: {
        'logo': { # Colors for logo states
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
        },
        'nozzle': { # Colors for nozzle states
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }
variable_logo_led_name:         "my_leds" 
# The name of the addressable LED chain that contains the logo LED(s)
variable_logo_idx:              "2,3,4,5,6,7" 
# A comma-separated list of indexes LEDs in the logo
variable_nozzle_led_name:       "my_leds"
# The name of the addressable LED chain that contains the nozzle LED(s). This will
# typically be the same LED chain as the logo.
variable_nozzle_idx:            "1"
# A comma-separated list of indexes of LEDs in the nozzle

variable_thermal_config: {
        'extruder': {
            'cool_temp': 40,
            'leds': 'logo',
        },
        'heater_bed': {
            'cool_temp': 40,
            'leds': 'nozzle',
        },
    }
# temperatures at which cooling will be considered complete

gcode:
    ; Do nothing

[gcode_macro _set_my_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}
    
    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_my_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _myleds_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _myleds_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _myleds_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_my_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_logo_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _myleds_vars"].logo_led_name %}
    {% set idx = printer["gcode_macro _myleds_vars"].logo_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_my_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_nozzle_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _myleds_vars"].nozzle_led_name %}
    {% set idx = printer["gcode_macro _myleds_vars"].nozzle_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_my_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro set_logo_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

[gcode_macro set_nozzle_leds_on]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_my_leds_by_name leds="nozzle" color="on" transmit={transmit}

[gcode_macro set_nozzle_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_my_leds_by_name leds="nozzle" color="off" transmit={transmit}

[gcode_macro status_off]
gcode:
    set_logo_leds_off transmit=0
    set_nozzle_leds_off

[gcode_macro status_ready]
gcode:
    _set_my_leds_by_name leds="logo" color="standby" transmit=0
    _set_my_leds_by_name leds="nozzle" color="standby" transmit=1

[gcode_macro status_busy]
gcode:
    _set_my_leds_by_name leds="logo" color="busy" transmit=0
    set_nozzle_leds_on

[gcode_macro status_heating]
gcode:
    _set_my_leds_by_name leds="logo" color="heating" transmit=0
    _set_my_leds_by_name leds="nozzle" color="heating" transmit=1

[gcode_macro status_leveling]
gcode:
    _set_my_leds_by_name leds="logo" color="leveling" transmit=0
    set_nozzle_leds_on

[gcode_macro status_homing]
gcode:
    _set_my_leds_by_name leds="logo" color="homing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode:
    _set_my_leds_by_name leds="logo" color="cleaning" transmit=0
    set_nozzle_leds_on

[gcode_macro status_meshing]
gcode:
    _set_my_leds_by_name leds="logo" color="meshing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode:
    _set_my_leds_by_name leds="logo" color="calibrating_z" transmit=0
    set_nozzle_leds_on

[gcode_macro status_printing]
gcode:
    _set_my_leds_by_name leds="logo" color="printing" transmit=0
    set_nozzle_leds_on

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 57.728
#*# pid_ki = 3.531
#*# pid_kd = 235.963
